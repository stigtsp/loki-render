/**
 *This program is free software: you can redistribute it and/or modify
 *it under the terms of the GNU General Public License as published by
 *the Free Software Foundation, either version 3 of the License, or
 *(at your option) any later version.
 *
 *This program is distributed in the hope that it will be useful,
 *but WITHOUT ANY WARRANTY; without even the implied warranty of
 *MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *GNU General Public License for more details.
 *
 *You should have received a copy of the GNU General Public License
 *along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * PreferencesForm.java
 *
 * Created on Oct 2, 2009, 8:46:52 PM
 */
package net.whn.loki.common;

import net.whn.loki.CL.CLHelper;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.whn.loki.common.ICommon.LokiRole;

/**
 *
 * @author daniel
 */
public class PreferencesForm extends LokiForm {

    /** Creates new form PreferencesForm */
    public PreferencesForm(Config c) {
        initComponents();
        cfg = c;

        //general
        updateCacheValues();
        if (cfg.getRole() == LokiRole.ASK) {
            rbtnAskMe.setSelected(true);
        } else if (cfg.getRole() == LokiRole.GRUNT) {
            rbtnGrunt.setSelected(true);
        } else if (cfg.getRole() == LokiRole.MASTER) {
            rbtnMaster.setSelected(true);
        } else if (cfg.getRole() == LokiRole.MASTER_GRUNT) {
            rbtnMasterAndGrunt.setSelected(true);
        } else {
            log.severe("unknown role: " + cfg.getRole());
        }

        //grunt
        txtBlenderBin.setText(cfg.getBlenderBin());

        //master
        txtMulticastAddress.setText(cfg.getMulticastAddress().getHostAddress());
        txtMulticastPort.setText(Integer.toString(cfg.getMulticastPort()));
        txtTTL.setText(Integer.toString(cfg.getMulticastTTL()));
        txtAnnounceInterval.setText(Integer.toString(cfg.getAnnounceInterval()));
        txtAcceptPort.setText(Integer.toString(cfg.getConnectPort()));
    }

    public void updateCacheValues() {
        spinnerCacheSizeLimit.setValue(cfg.getCacheSizeLimitMB());
        txtCurrentCacheSize.setText(cfg.getCacheSizeStr());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpRole = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlGeneral = new javax.swing.JPanel();
        pnlRole = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rbtnGrunt = new javax.swing.JRadioButton();
        rbtnMaster = new javax.swing.JRadioButton();
        rbtnMasterAndGrunt = new javax.swing.JRadioButton();
        rbtnAskMe = new javax.swing.JRadioButton();
        pnlCache = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        spinnerCacheSizeLimit = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCurrentCacheSize = new javax.swing.JLabel();
        pnlGrunt = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtBlenderBin = new javax.swing.JTextField();
        btnBrowseForBlenderBin = new javax.swing.JButton();
        pnlMaster = new javax.swing.JPanel();
        pnlNetwork = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMulticastAddress = new javax.swing.JTextField();
        txtMulticastPort = new javax.swing.JTextField();
        txtAcceptPort = new javax.swing.JTextField();
        txtTTL = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtAnnounceInterval = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Preferences");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlRole.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Role", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 13))); // NOI18N
        pnlRole.setToolTipText("");

        jLabel1.setText("Select Loki Render's role on startup:");

        btngrpRole.add(rbtnGrunt);
        rbtnGrunt.setText("Grunt");
        rbtnGrunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnGruntActionPerformed(evt);
            }
        });

        btngrpRole.add(rbtnMaster);
        rbtnMaster.setText("Master");

        btngrpRole.add(rbtnMasterAndGrunt);
        rbtnMasterAndGrunt.setText("Master and Grunt");

        btngrpRole.add(rbtnAskMe);
        rbtnAskMe.setSelected(true);
        rbtnAskMe.setText("Ask me");

        javax.swing.GroupLayout pnlRoleLayout = new javax.swing.GroupLayout(pnlRole);
        pnlRole.setLayout(pnlRoleLayout);
        pnlRoleLayout.setHorizontalGroup(
            pnlRoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(pnlRoleLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(pnlRoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtnGrunt)
                            .addComponent(rbtnAskMe)
                            .addComponent(rbtnMaster)
                            .addComponent(rbtnMasterAndGrunt))))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        pnlRoleLayout.setVerticalGroup(
            pnlRoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoleLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnAskMe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnGrunt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnMaster)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnMasterAndGrunt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCache.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Project File Cache", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 13))); // NOI18N

        jLabel2.setText("Set a target limit of");

        spinnerCacheSizeLimit.setModel(new javax.swing.SpinnerNumberModel(100, 50, 4000, 10));
        spinnerCacheSizeLimit.setToolTipText("Loki will limit the cache size to this value, unless all the cached files are still being used by the job queue, in which case the cache will be allowed to grow larger.");

        jLabel3.setText("MB of space for the cache");

        jLabel7.setText("Current cache size:");

        txtCurrentCacheSize.setText("0 MB");
        txtCurrentCacheSize.setToolTipText("cache size will exceed the target limit if cached files are still associated with queued jobs.");

        javax.swing.GroupLayout pnlCacheLayout = new javax.swing.GroupLayout(pnlCache);
        pnlCache.setLayout(pnlCacheLayout);
        pnlCacheLayout.setHorizontalGroup(
            pnlCacheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCacheLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCacheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCacheLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerCacheSizeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(pnlCacheLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCurrentCacheSize)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        pnlCacheLayout.setVerticalGroup(
            pnlCacheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCacheLayout.createSequentialGroup()
                .addGroup(pnlCacheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spinnerCacheSizeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCacheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCurrentCacheSize))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlGeneralLayout = new javax.swing.GroupLayout(pnlGeneral);
        pnlGeneral.setLayout(pnlGeneralLayout);
        pnlGeneralLayout.setHorizontalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCache, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlRole, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlGeneralLayout.setVerticalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCache, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("general", pnlGeneral);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Blender", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 13))); // NOI18N

        jLabel9.setText("Blender executable path:");

        txtBlenderBin.setToolTipText("loki needs to know the blender executable when it starts as a grunt");

        btnBrowseForBlenderBin.setText("Browse");
        btnBrowseForBlenderBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseForBlenderBinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBlenderBin, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(btnBrowseForBlenderBin, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBlenderBin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBrowseForBlenderBin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlGruntLayout = new javax.swing.GroupLayout(pnlGrunt);
        pnlGrunt.setLayout(pnlGruntLayout);
        pnlGruntLayout.setHorizontalGroup(
            pnlGruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGruntLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlGruntLayout.setVerticalGroup(
            pnlGruntLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGruntLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("local grunt", pnlGrunt);

        pnlNetwork.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Network settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Sans", 1, 13))); // NOI18N
        pnlNetwork.setToolTipText("these networks settings cannot currently be changed");

        jLabel4.setText("Announce multicast group:");

        jLabel5.setText("Announce port:");

        jLabel6.setText("Accept port:");

        txtMulticastAddress.setToolTipText("This is the multicast address that the master uses to announce itself on the network. Grunts listen on this address to find the master.");
        txtMulticastAddress.setEnabled(false);

        txtMulticastPort.setToolTipText("This is the port used in combination with the multicast address.");
        txtMulticastPort.setEnabled(false);
        txtMulticastPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMulticastPortActionPerformed(evt);
            }
        });

        txtAcceptPort.setToolTipText("The port grunts use to establish a connection with the master.");
        txtAcceptPort.setEnabled(false);

        txtTTL.setToolTipText("Time To Live for the multicast announcement. A value of '1' will only hit the local network. ");
        txtTTL.setEnabled(false);

        jLabel8.setText("Announce TTL:");

        jLabel10.setText("Announce Interval (ms):");

        txtAnnounceInterval.setToolTipText("Time interval between master announcements.");
        txtAnnounceInterval.setEnabled(false);

        javax.swing.GroupLayout pnlNetworkLayout = new javax.swing.GroupLayout(pnlNetwork);
        pnlNetwork.setLayout(pnlNetworkLayout);
        pnlNetworkLayout.setHorizontalGroup(
            pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNetworkLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMulticastAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtAcceptPort, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtAnnounceInterval, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTTL, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtMulticastPort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlNetworkLayout.setVerticalGroup(
            pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNetworkLayout.createSequentialGroup()
                .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMulticastAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMulticastPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtAnnounceInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNetworkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAcceptPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlMasterLayout = new javax.swing.GroupLayout(pnlMaster);
        pnlMaster.setLayout(pnlMasterLayout);
        pnlMasterLayout.setHorizontalGroup(
            pnlMasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMasterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMasterLayout.setVerticalGroup(
            pnlMasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMasterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("local master", pnlMaster);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnGruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnGruntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnGruntActionPerformed

    private void txtMulticastPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMulticastPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMulticastPortActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        boolean valid = true;
        if (!CLHelper.isBlenderExe(txtBlenderBin.getText())) {
            //valid = false;
        }

        //Grunt
        if (valid) {
            //General
            if (rbtnAskMe.isSelected()) {
                cfg.setRole(LokiRole.ASK);
            } else if (rbtnGrunt.isSelected()) {
                cfg.setRole(LokiRole.GRUNT);
            } else if (rbtnMaster.isSelected()) {
                cfg.setRole(LokiRole.MASTER);
            } else if (rbtnMasterAndGrunt.isSelected()) {
                cfg.setRole(LokiRole.MASTER_GRUNT);
            } else {
                log.severe("unexpected state for role selection");
            }
            cfg.setCacheSizeLimitMB((Integer) spinnerCacheSizeLimit.getValue());

            //Grunt
            cfg.setBlenderBin(txtBlenderBin.getText());

            setVisible(false);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBrowseForBlenderBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseForBlenderBinActionPerformed
        String blenderBinStr = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Please select the Blender executable");
        if (fileChooser.showDialog(null, "Select") ==
                JFileChooser.APPROVE_OPTION) {
            blenderBinStr = fileChooser.getSelectedFile().getPath();

            if (CLHelper.isBlenderExe(blenderBinStr)) {
                txtBlenderBin.setText(blenderBinStr);
            } else {
                String msg = "'" + blenderBinStr +
                        "' is not a valid Blender \n" + "executable.";
                JOptionPane.showMessageDialog(null, msg, "Notice",
                        JOptionPane.WARNING_MESSAGE);

                log.info("not a valid blender executable: " +
                        blenderBinStr);
            }
        }
    }//GEN-LAST:event_btnBrowseForBlenderBinActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setVisible(false);
    }//GEN-LAST:event_formWindowClosing
    private final Config cfg;
    //logging
    private static final String className = "net.whn.loki.common.PreferencesForm";
    private static final Logger log = Logger.getLogger(className);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseForBlenderBin;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup btngrpRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlCache;
    private javax.swing.JPanel pnlGeneral;
    private javax.swing.JPanel pnlGrunt;
    private javax.swing.JPanel pnlMaster;
    private javax.swing.JPanel pnlNetwork;
    private javax.swing.JPanel pnlRole;
    private javax.swing.JRadioButton rbtnAskMe;
    private javax.swing.JRadioButton rbtnGrunt;
    private javax.swing.JRadioButton rbtnMaster;
    private javax.swing.JRadioButton rbtnMasterAndGrunt;
    private javax.swing.JSpinner spinnerCacheSizeLimit;
    private javax.swing.JTextField txtAcceptPort;
    private javax.swing.JTextField txtAnnounceInterval;
    private javax.swing.JTextField txtBlenderBin;
    private javax.swing.JLabel txtCurrentCacheSize;
    private javax.swing.JTextField txtMulticastAddress;
    private javax.swing.JTextField txtMulticastPort;
    private javax.swing.JTextField txtTTL;
    // End of variables declaration//GEN-END:variables
}
